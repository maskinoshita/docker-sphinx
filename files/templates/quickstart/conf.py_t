# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
{% if append_syspath -%}
import os
import sys
sys.path.insert(0, u'{{ module_path }}')
{% else -%}
# import os
# import sys
{% if module_path -%}
# sys.path.insert(0, u'{{ module_path }}')
{% else -%}
# sys.path.insert(0, os.path.abspath('.'))
{% endif -%}
{% endif %}

import recommonmark
from recommonmark.transform import AutoStructify

# -- Project information -----------------------------------------------------

project = u'{{ project }}'
copyright = u'{{ copyright }}'
author = u'{{ author }}'

# The short X.Y version
version = u'{{ version }}'
# The full version, including alpha/beta/rc tags
release = u'{{ release }}'


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
{%- for ext in extensions %}
    '{{ ext }}',
{%- endfor %}
{%- if use_diags %}
    'sphinxcontrib.blockdiag',
    'sphinxcontrib.seqdiag',
    'sphinxcontrib.actdiag',
    'sphinxcontrib.nwdiag',
    'sphinxcontrib.blockdiag',
{%- endif %}
{%- if use_graphviz %}
    'sphinx.ext.graphviz',
{%- endif %}
{%- if use_plantuml %}
    'sphinxcontrib.plantuml',
{%- endif %}
]

{% if use_diags -%}
blockdiag_fontpath = '{{ diag_fontpath }}'
seqdiag_fontpath = '{{ diag_fontpath }}'
actdiag_fontpath = '{{ diag_fontpath }}'
nwdiag_fontpath = '{{ diag_fontpath }}'

blockdiag_html_image_format = '{{ diag_image_format }}'
seqdiag_html_image_format = '{{ diag_image_format }}'
actdiag_html_image_format = '{{ diag_image_format }}'
nwdiag_html_image_format = '{{ diag_image_format }}'

blockdiag_antialias = {{ diag_antialias }}
seqdiag_antialias = {{ diag_antialias }}
actdiag_antialias = {{ diag_antialias }}
nwdiag_antialias = {{ diag_antialias }}

{% endif -%}
{% if use_graphviz -%}
graphviz_dot_args = ['-Gfontname={{ graphviz_default_fontname }}', '-Efontname={{ graphviz_default_fontname }}', '-Nfontname={{ graphviz_default_fontname }}']
graphviz_output_format = '{{ graphviz_output_format }}'

{% endif -%}
{%- if use_plantuml %}
plantuml = 'java -jar /app/plantuml.jar'
plantuml_output_format = '{{ plantuml_output_format }}'

{% endif -%}
# Add any paths that contain templates here, relative to this directory.
templates_path = ['{{ dot }}templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = ['.rst', '.md']

{% if master_doc != 'index' -%}
# The master toctree document.
master_doc = '{{ master }}'

{% endif -%}
# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = {{ language | repr }}

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = [{{ exclude_patterns }}]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['{{ dot }}static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# If this is not None, a 'Last updated on:' timestamp is inserted at every
# page bottom, using the given strftime() format. The empty string is
# equivalent to '%b %d, %Y' (or a locale-dependent equivalent).
# http://www.sphinx-doc.org/ja/master/usage/configuration.html#confval-html_last_updated_fmt
# https://docs.python.org/3/library/time.html#time.strftime
html_last_updated_fmt = '%Y-%m-%d %H:%M'

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = '{{ project }}doc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    'papersize': 'a4paper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    'pointsize': '11pt',

    # Extra document class options ('oneside', 'twoside' etc.)
    #
    # 'extraclassoptions': 'oneside,openany',
    'extraclassoptions': 'oneside,openany,dvipdfmx,upLaTeX',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    'preamble': '''
\\setlength{\\textwidth}{\\fullwidth}
\\setlength{\\evensidemargin}{\\oddsidemargin}

\\renewcommand{\\baselinestretch}{1.0}
\\pagestyle{plain}
\\thispagestyle{plain}
\\setcounter{secnumdepth}{3}

\\pagenumbering{arabic}

\\let\\pyOldTableofcontents=\\tableofcontents
\\renewcommand{\\tableofcontents}{
  \\begingroup
  \\parskip = 0mm
  \\pyOldTableofcontents
  \\endgroup
  \\vspace{12pt}
}
'''

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

latex_docclass = {
    'howto': 'jsarticle',
    'manual': 'jsreport'
}

numfig = True
numfig_format = {
    'section': '%s',
    'figure': '図 %s',
    'table': '表 %s',
    'code-block': '%s'
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, '{{ project }}.tex', u'{{ project }}',
     u'{{ author }}', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, '{{ project_manpage }}', u'{{ project }}',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, '{{ project }}', u'{{ project }}',
     author, '{{ project }}', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']
{%- if extensions %}


# -- Extension configuration -------------------------------------------------
{%- endif %}
{%- if 'sphinx.ext.intersphinx' in extensions %}

# -- Options for intersphinx extension ---------------------------------------

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {'https://docs.python.org/': None}
{%- endif %}
{%- if 'sphinx.ext.todo' in extensions %}

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True
{%- endif %}

# -- recommonmark settings -----------------------------------------------
def setup(app):
    app.add_config_value('recommonmark_config', {
            'enable_eval_rst': True,
            'enable_math': True,
            'enable_inline_math': True,
            }, True)
    app.add_transform(AutoStructify)

# -- sphinx-themes -----------------------------------------------------------
# If you would like to use a different theme, do the following.
# 1. Copy code from conf.py of your favorite theme at https://sphinx-themes.org/
# 2. Modify Dockerfile to install the theme.
html_theme = 'sphinx_rtd_theme'
